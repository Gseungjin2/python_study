'''
7일차 목표: 행맨 게임 만들기
 for 반복문 및 while 반복문, if 문 및 else 문, 리스트, 문자열, range 함수나 모듈
 등 많은 것들을 사용해서 만들기
'''

'''
7일차: 순서도로 복잡한 문제를 단순하게 만들기

Flow chart Programmong: 우리가 만들 프로그램이 어떤 논리로 구성 될지 검토해볼
차레이다 이를 위해 순서도를 그려 프로그램을 만들것이다.

단순히 우리가 만들 게임에 적용될 논리를 순서도에 맞춰 그리면 됩니다.

생각해보자 먼저 어떻게 시작될지 부터 여러 단게로 나누어 보자.

사용자가 글자를 맞춰볼 때 어떤 일이 일어나야 할지, 틀리면 어떤 일이 일어나야 할지,
게임이 언제 끝나야 할지 등을 생각해봅시다 이제 영상을 멈추고 종이와 연핑 혹은 draw.io를
이용해서 순서도를 그려보자.

로직 설게
게임 시작
    |
단어 입력 -- 틀린 단어 목숨 차감
    |
정답 단어 배열 EX) 6개의 단어라면 어디에 문자열이 어디에 들어갈지 중요..
    |
목숨이 다하면 게임 실패 했다는 문구와 강제 종료 필요 재시작 할 수 있는 기능도 필요

영상의 순서도:
게임 시작
    |
임의의 단어 만들기 EX) MOUSE
    |
다음으로 단어의 글자 수 만큼 빈칸을 만들기
    |
유저가 추측한 글자가 있는가를 확인하는 로직 필요
    |
질문에 대한 대답이 '예' 이름로 'YES'를 따라 내려가면 빈칸의 글자를 O로 바꿔주는 로직
    |
다음 단계는 이 빈칸이 채워진 후에 빈칸이 지워지므로써 모든 빈칸이 채워졌는지 확인 핋요
아직은 하나만 밎췄으므로 대답이 'NO'가 나오게 한다.
    |
다시 위로 올라가 유저에게 다른 글자를 맟주도록 하는 로직 필요 
게임을 진행하면서 모든 글자를 맞추는 순간이 찾아오면 그 때 모든 빈칸이
채워짐으로 'YES' 내려가서
게임을 끝내면 된다. 모든 글자를 맞췄으므로 유저가 이긴 것으로 나오게 한다
    |
다시 글자를 물어보는 단계로 돌아가보자
    |
Z 를 입력시 MOUSE 안에 포함 되어있지 않으므로 오른쪽인 'NO' 경로를 따라 내려가면
행맨을 그리기 시작하는 로직이 필요하다 행맨이 어디까지 그려졌는지 확인하고
머리만 있다면 아직 살아 있긴때문에 'NO' 로 내려간후 다시 글자를 물어보는 단계로 넘어가는 로직
필요하다
    |
만일 행맨을 완저히 다 그려 기회를 모두 소진했다면 게임을 종료해야한다.

이러한 로직을 논리를 따라가야한다
'''

'''
도전과제1-무작위 단어를 고르고 정답 확인하기

이 프로젝트는 다섯 단게로 나눠서 진행할 것이다.
'''